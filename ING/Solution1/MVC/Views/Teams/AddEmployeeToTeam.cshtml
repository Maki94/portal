@model MVC.Models.EmpToTeamModel

@{
    ViewBag.Title = "AddEmployeeToTeam";
    Layout = null;
}

@{
    List<SelectListItem> employees = new List<SelectListItem>();
    foreach (var a in Data2.Employees.getAllEmployees())
    {
        employees.Add(new SelectListItem { Text = a.firstName + " " + a.lastName, Value = a.employeeID.ToString() });
    }
}

@{
    List<SelectListItem> teams = new List<SelectListItem>();
    foreach (var a in Data2.Teams.getAllActiveTeams())
    {
        teams.Add(new SelectListItem { Text = a.teamName, Value = a.teamID.ToString() });
    }
}

@using (Html.BeginForm())
{
  
    @Html.HiddenFor(m => m.SelectedEmployee, new { @class = "selectedEmployee" })
    @Html.HiddenFor(m => m.SelectedTeam, new { @class = "selectedTeam" })

    <div class="form-group">
        @Html.LabelFor(model => model.Employees)
        @Html.ListBoxFor(model => model.Employees,
                        new MultiSelectList(employees, "Value", "Text"),
                        new { Multiple = "multiple", @id = "selectEmployees" })
        @{
            Html.ValidateFor(m=>m.Employees);
        }
        @Html.ValidationMessageFor(model => model.Employees, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Teams)
        @Html.ListBoxFor(model => model.Teams,
                    new MultiSelectList(teams, "Value", "Text"),
                    new { Multiple = "multiple", @id = "selectTeams" })
        @Html.ValidationMessageFor(model => model.Teams, "", new { @class = "text-danger" })
    </div>

    <input class="bottom-button diagram-submit" type="submit" value="Add to team" />
    <a href="" class="bottom-button cancel-button">Cancel</a>

}
