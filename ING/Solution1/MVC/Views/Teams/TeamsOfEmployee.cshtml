@model MVC.Models.TeamsOfEmployeeModel

@{
    ViewBag.Title = "TeamsOfEmployee";
}

@{
    Boolean manager = CheckPermission.CheckUserPermisson((int)Data2.Enums.Permissions.Team_Add_Edit_Remove_View);
}

<div class="main-content">
    <div class="table-container ">
       

        <h3>Teams of  @Html.ActionLink(Model.EmployeeName, "Details", "Employees", new { empID = Model.EmployeeID }, null) </h3>
        
        @if (manager)
        {
           
            @Html.HiddenFor(m => m.EmployeeID, new { @class = "employeeFilter" })
            <input type="button" value="Add to team" class="green-btn addTeamToEmp-btn" />
        }



        @if (Model.CurrentFilter)
        {
            <input type="button" value="All teams" class="green-btn" onclick="location.href = '@Url.Action("TeamsOfEmployee", new {id = Model.EmployeeID, current = false})'" />
        }

        @if (Model.TeamsList.Count > 0)
        {
            <table class="table">
                <tr>
                    <th>
                        @Html.ActionLink(@Html.DisplayNameFor(model => model.TeamsList[0].TeamName).ToHtmlString(), "SortTeamsOfEmp", "Teams", new { sort = "Name" , empID = Model.EmployeeID, current = Model.CurrentFilter}, new { @class = "teamName" })
                    </th>
                    @Html.HiddenFor(model => model.TeamsList[0].TeamID)
                    <th>
                        @Html.ActionLink(@Html.DisplayNameFor(model => model.TeamsList[0].DateOfCreation).ToHtmlString(), "SortTeamsOfEmp", "Teams", new { sort = "DateOfCreation" , empID = Model.EmployeeID, current = Model.CurrentFilter }, null)
                    </th>
                    <th>
                        @Html.ActionLink(@Html.DisplayNameFor(model => model.TeamsList[0].DateOfDeletion).ToHtmlString(), "SortTeamsOfEmp", "Teams", new { sort = "DateOfDeletion"  , empID = Model.EmployeeID, current = Model.CurrentFilter }, null)
                    </th>
                    <th>
                        @Html.ActionLink(@Html.DisplayNameFor(model => model.TeamsList[0].LastStartDate).ToHtmlString(), "SortTeamsOfEmp", "Teams", new { sort = "LastStartDate", empID = Model.EmployeeID, current = Model.CurrentFilter }, null)
                    </th>
                    <th>
                        @Html.ActionLink(@Html.DisplayNameFor(model => model.TeamsList[0].LastEndDate).ToHtmlString(), "SortTeamsOfEmp", "Teams", new { sort = "LastEndDate", empID = Model.EmployeeID, current = Model.CurrentFilter }, null)
                    </th>
                </tr>

                @foreach (var item in Model.TeamsList)
                {
                    <tr>
                        <td>
                            @Html.ActionLink(item.TeamName, "Details", new { id = item.TeamID }, new { @class = "teamName" })
                        </td>
                        @Html.HiddenFor(modelItem => item.TeamID, htmlAttributes: new { @class = "hiddenID" })
                        <td>
                            @Html.DisplayFor(modelItem => item.DateOfCreation)
                        </td>

                        @if (item.DateOfDeletion == null && manager)
                        {
                            <td>
                                <a class="edit-team-btn" href="#"><span>Edit name</span></a> |
                                @Html.ActionLink("History", "History", new { id = item.TeamID }) |
                                @Html.ActionLink("Delete", "Delete", new { id = item.TeamID }) |
                                <a class="green addEmpToTeam-btn" href="#"><span>Add Employee</span></a>
                            </td>
                          
                        }
                        else
                        {
                            <td >
                                @Html.DisplayFor(modelItem => item.DateOfDeletion)
                            </td>
                        }
                        <th>
                            @Html.DisplayFor(model => item.LastStartDate)
                        </th>
                        @if (item.LastEndDate != null)
                        {
                            <th>
                                @Html.DisplayFor(model => item.LastEndDate)
                            </th>
                        }
                        else
                        {
                        <td>
                            @Html.ActionLink("Remove ", "RemoveEmployee", "Teams", new { teamID = item.TeamID, empID = Model.EmployeeID }, new { @class = "red" })
                        </td>
                        }

                       
                    </tr>
                }

            </table>
        }
        else
        {
            <h4>@Model.EmployeeName is not a team player</h4>
        }
    </div>
</div>

<div class="dialog dialogContainer" id="dialogEdit" title="CREATE TEAM">
    @using (Html.BeginForm("Create", "Teams", FormMethod.Post))
            {
                Html.RenderPartial("Create", new Data2.DTOs.TeamDTO());
            }
</div>
<div id="dialogAddEmployeeToTeam" class="dialogContainer" title="ADD EMPLOYEE">
    @using (Html.BeginForm("AddEmployeeToTeam", "Teams", FormMethod.Post))
            {
                Html.RenderPartial("AddEmployeeToTeam", new MVC.Models.EmpToTeamModel());
            }
</div>


