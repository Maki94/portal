@model MVC.Models.EmployeeProfileModel
@using Data2
@using Data2.DTOs

@{
    ViewBag.Title = "Details";
}

<script type="text/javascript" src="@Url.Content("~/Scripts/jquery-1.10.2.min.js")"></script>



@{
    Boolean manager = CheckPermission.CheckUserPermisson((int)Enums.Permissions.EditEmp);
    Boolean mine = CheckPermission.CheckUserID(Model.Employee.EmployeeID);
}

@{
    int lastStatus = Data2.Employees.getLastStatus(Model.Employee.EmployeeID).emplyeeStatusEnumID;
    List<SelectListItem> statuses = new List<SelectListItem>();
    foreach (var a in Enum.GetValues(typeof(Data2.Enums.employeeStatus)))
    {
        SelectListItem pom = new SelectListItem { Text = a.ToString(), Value = ((int)a).ToString() };
        if ((int)a == lastStatus)
        {
            pom.Selected = true;
        }
        statuses.Add(pom);
    }
}

@using (Html.BeginForm())
{
    <header>
        <h4>PROFILE</h4>
    </header>
    <div class="main-content">
        <div class="profile-form">

            <div class="table-container personal">
                <h3>PERSONAL</h3>
                @if (LeaveHistories.isOnVacation(Model.Employee.EmployeeID, DateTime.Today))
                {
                    <h3>On vacation </h3>
                }

                <div class="personal-subcontainer">
                    @*<div class="img-container" >
                            <img src="~/images/user.png" alt="user" />
                            <a href="#">Change picture</a>
                        </div>*@

                    <div class="personal-informations">

                        @Html.HiddenFor(model => Model.Employee.EmployeeID, new { @class = "hiddenID" })
                        @Html.HiddenFor(m => Model.Employee.Role)
                        @Html.HiddenFor(m => m.Employee.Status)

                        <table class="table">
                            <tr>
                                <td>
                                    @Html.DisplayNameFor(m => m.Employee.FirstName)
                                </td>
                                <td style="width: 300px;" colspan="2">
                                    @Html.EditorFor(m => m.Employee.FirstName, Model.Employee.FirstName)
                                </td>
                                @{
                                    int rownum = 8 + Model.Contact.Emails.Count + Model.Contact.Address.Count + Model.Contact.Phones.Count;
                                }
                                <td class="children-number" style="vertical-align: middle;" rowspan="@rownum">
                                    @if (mine || manager)
                                    {

                                        @Html.ActionLink(Model.Employee.LeaveDaysNum.ToString(), "CalculateLeaveDays", "Employees", new { id = Model.Employee.EmployeeID }, new { @class = "green-link" })

                                    }
                                    else
                                    {
                                        @Model.Employee.LeaveDaysNum.ToString()
                                    }
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.DisplayNameFor(m => m.Employee.LastName)
                                </td>
                                <td colspan="2">
                                    @Html.EditorFor(m => m.Employee.LastName, Model.Employee.LastName)
                                </td>
                            </tr>
                            @if (Model.Contact.Emails.Count != 0)
                            {
                                for (int i = 0; i < Model.Contact.Emails.Count; i++)
                                {
                                    @Html.HiddenFor(m => m.Contact.Emails[i].EmailID)

                                    <tr>
                                        @if (i == 0)
                                        {
                                            <td rowspan="@(Model.Contact.Emails.Count + 1)">
                                                @("Email")
                                            </td>
                                        }

                                        <td>
                                            @Html.EditorFor(m => m.Contact.Emails[i].Email, Model.Contact.Emails[i].Email)
                                        </td>
                                        <td style="width: 100px;">
                                            @Html.ActionLink("Remove", "removeEmail", new { id = Model.Contact.Emails[i].EmailID, empID = Model.Employee.EmployeeID }, new { @class = "red" })
                                        </td>
                                    </tr>
                                }
                            }
                            <tr>
                                @if (Model.Contact.Emails.Count == 0)
                                {
                                    <td>
                                        @("Email")
                                    </td>
                                }

                                <td>
                                    <input type="text" name="email" id="email" placeholder="Add new email" />
                                </td>
                                <td>
                                    @Html.ActionLink("Add email", "addEmail", "Employees", new { id = Model.Employee.EmployeeID, email = "xxx" }, new { @class = "linkEmail green" })
                                </td>
                            </tr>

                            @if (Model.Contact.Phones.Count != 0)
                            {
                                for (int i = 0; i < Model.Contact.Phones.Count; i++)
                                {
                                    @Html.HiddenFor(m => m.Contact.Phones[i].PhoneID)

                                    <tr>
                                        @if (i == 0)
                                        {
                                            <td rowspan="@(Model.Contact.Phones.Count + 1)">
                                                @("Telephone")
                                            </td>
                                        }

                                        <td>
                                            @Html.EditorFor(m => m.Contact.Phones[i].Phone, Model.Contact.Phones[i].Phone)
                                        </td>
                                        <td>
                                            @Html.ActionLink("Remove", "removeTelephoneNumber", new { id = Model.Contact.Phones[i].PhoneID, empID = Model.Employee.EmployeeID }, new { @class = "red" })
                                        </td>
                                    </tr>
                                }
                            }
                            <tr>

                                @if (Model.Contact.Phones.Count == 0)
                                {

                                    <td>
                                        @("Telephone")
                                    </td>
                                }
                                <td>
                                    <input type="text" name="phoneNumber" id="phoneNumber" placeholder="Add new telephone number" />
                                </td>
                                <td>
                                    @Html.ActionLink("Add Number", "addTelephoneNUmber", new { id = Model.Employee.EmployeeID, number = "xxx" }, new { @class = "linkTel green" })
                                </td>
                            </tr>


                            @if (Model.Contact.Address.Count != 0)
                            {
                                for (int i = 0; i < Model.Contact.Address.Count; i++)
                                {
                                    @Html.HiddenFor(m => m.Contact.Address[i].AddressID)

                                    <tr>
                                        @if (i == 0)
                                        {
                                            <td rowspan="@(Model.Contact.Address.Count + 1)">
                                                @("Address")
                                            </td>
                                        }

                                        <td>
                                            @Html.EditorFor(m => m.Contact.Address[i].Address, Model.Contact.Address[i].Address)
                                        </td>
                                        <td>
                                            @Html.ActionLink("Remove", "removeAdress", new { id = Model.Contact.Address[i].AddressID, empID = Model.Employee.EmployeeID }, new { @class = "red" })
                                        </td>
                                    </tr>
                                }
                            }
                            <tr>
                                @if (Model.Contact.Address.Count == 0)
                                {
                                    <td>
                                        @("Address")
                                    </td>
                                }

                                <td>
                                    <input type="text" name="adress" id="adress" placeholder="Add new address" />
                                </td>
                                <td>
                                    @Html.ActionLink("Add adress", "addAdress", new { id = Model.Employee.EmployeeID, adress = "xxx" }, new { @class = "linkAdress green" })
                                </td>
                            </tr>

                            <tr>
                                <td>
                                    @Html.DisplayNameFor(m => m.Employee.DateOfBirth)
                                </td>
                                <td colspan="2">
                                    @Html.EditorFor(m => m.Employee.DateOfBirth, Model.Employee.DateOfBirth.ToString(), new { htmlAttributes = new { @class = "datePicker" } })
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.DisplayNameFor(m => m.Employee.Username)
                                </td>
                                <td colspan="2">
                                    @Html.DisplayFor(m => m.Employee.Username)
                                </td>
                            </tr>
                                @if (CheckPermission.CheckUserID(@Model.Employee.EmployeeID))
                                {
                                    <tr>
                                        <td>
                                            <input type="button" value="Change Password" class="green-btn addEmployee-btn"/>
                                        </td>
                                    </tr>
                                }
                            <tr>
                                <td>
                                    @Html.DisplayNameFor(m => m.Employee.ContractEnd)
                                </td>
                                <td>
                                    @Html.DisplayFor(m => m.Employee.ContractEnd)
                                </td>
                                <td>
                                    @Html.ActionLink("History", "History", new { id = Model.Employee.EmployeeID })
                                </td>
                            </tr>


                        </table>
                </div>
            </div>

            <input type="submit" class="btn-link" value="Submit Changes" formaction='@Url.Action("ChangeDetails", "Employees")' />

        </div>


        <!--TEAMS-->
        <div class="table-container personal">
            <h3>@Html.ActionLink("TEAMS", "Teams", new { id = Model.Employee.EmployeeID })</h3>
            @if (Model.Teams.CurrentFilter)
                {
                <input type="button" value="All teams" class="green-btn" onclick="location.href = '@Url.Action("Details", "Employees", new {id = Model.Employee.EmployeeID, current = false})'" />
            }
            <input type="button" value="Add to team" class="green-btn teamButton addTeamToEmp-btn" />

            @if (Model.Teams.TeamsList.Count > 0)
                {
                <div class="personal-subcontainer">
                    <table class="table">
                        <tr>
                            <th>
                                @Html.ActionLink(@Html.DisplayNameFor(model => model.Teams.TeamsList[0].TeamName).ToHtmlString(), "SortTeamsOfEmp", "Employees", new { sort = "Name", empID=Model.Employee.EmployeeID, current = Model.Teams.CurrentFilter }, new { @class = "teamName" })
                            </th>
                            @Html.HiddenFor(model => model.Teams.TeamsList[0].TeamID)
                            <th>
                                @Html.ActionLink(@Html.DisplayNameFor(model => model.Teams.TeamsList[0].DateOfCreation).ToHtmlString(), "SortTeamsOfEmp", "Employees", new { sort = "DateOfCreation", empID = Model.Employee.EmployeeID, current = Model.Teams.CurrentFilter }, null)
                            </th>
                            <th>
                                @Html.ActionLink(@Html.DisplayNameFor(model => model.Teams.TeamsList[0].DateOfDeletion).ToHtmlString(), "SortTeamsOfEmp", "Employees", new { sort = "DateOfDeletion", empID = Model.Employee.EmployeeID, current = Model.Teams.CurrentFilter }, null)
                            </th>
                            <th>
                                @Html.ActionLink(@Html.DisplayNameFor(model => model.Teams.TeamsList[0].LastStartDate).ToHtmlString(), "SortTeamsOfEmp", "Employees", new { sort = "LastStartDate", empID = Model.Employee.EmployeeID, current = Model.Teams.CurrentFilter }, null)
                            </th>
                            <th>
                                @Html.ActionLink(@Html.DisplayNameFor(model => model.Teams.TeamsList[0].LastEndDate).ToHtmlString(), "SortTeamsOfEmp", "Employees", new { sort = "LastEndDate", empID = Model.Employee.EmployeeID, current = Model.Teams.CurrentFilter }, null)
                            </th>
                        </tr>

                        @foreach (var item in Model.Teams.TeamsList)
                        {
                            <tr>
                                <td>
                                    @Html.ActionLink(item.TeamName, "Details","Teams", new { id = item.TeamID }, new { @class = "teamName" })
                                </td>
                                @Html.HiddenFor(modelItem => item.TeamID, htmlAttributes: new { @class = "hiddenID" })
                                <td>
                                    @Html.DisplayFor(modelItem => item.DateOfCreation)
                                </td>

                                @if (item.DateOfDeletion == null && manager)
                        {
                                    <td>
                                        <a class="edit-team-btn" href="#"><span>Edit name</span></a> |
                                        @Html.ActionLink("History", "History", "Teams", new { id = item.TeamID }, null) |
                                        @Html.ActionLink("Delete", "Delete", "Teams", new { id = item.TeamID }, null) |
                                        <a class="green addEmpToTeam-btn" href="#"><span>Add Employee</span></a>
                                    </td>

                                }
                                else
                                {
                                    <td>
                                        @Html.DisplayFor(modelItem => item.DateOfDeletion)
                                    </td>
                                }
                                <th>
                                    @Html.DisplayFor(model => item.LastStartDate)
                                </th>
                                @if (item.LastEndDate != null)
                        {
                                    <th>
                                        @Html.DisplayFor(model => item.LastEndDate)
                                    </th>
                                }
                                else
                                {
                                    <td>
                                        @Html.ActionLink("Remove ", "RemoveEmployee", "Teams", new { teamID = item.TeamID, empID = Model.Employee.EmployeeID }, new { @class = "red" })
                                    </td>
                                }


                            </tr>
                        }

                    </table>
                    @*<table class="teams-table">

                                <tr>

                                    <th class="teams-number">@Html.DisplayNameFor(model => model.Teams.TeamsList[0].TeamName)</th>
                                    <th class="teams-number">@Html.DisplayNameFor(model => model.Teams.TeamsList[0].StartDate)</th>
                                    @if (manager)
                                    {
                                        <th class="teams-name" colspan="2">USEFUL LINKS</th>
                                    }


                                </tr>

                                @foreach (var item in Model.Teams.TeamsList)
                        {

                                    <tr>
                                        <td class="teams-number">
                                            @Html.EditorFor(m => item.TeamName, item.TeamName, new { @class = "teams-name" })
                                        </td>
                                        @Html.HiddenFor(m => item.TeamID, new { @class = "teamID" })
                                        <td class="teams-name">
                                            @Html.DisplayFor(modelItem => item.StartDate, new { @class = "teams-name" })
                                        </td>


                                        @if (manager)
                                        {
                                            <td class="teams-name">
                                                @Html.ActionLink("History", "History", "Teams", new { id = item.TeamID }, null) |
                                                @Html.ActionLink("Delete", "Delete", "Teams", new { id = item.TeamID }, null) |
                                                <a href="#" class="green addEmpToTeam-btn">Add Employee</a>
                                            </td>

                                            <td class="teams-number">
                                                @Html.ActionLink("Remove ", "RemoveEmployee", "Teams", new { teamID = item.TeamID, empID = Model.Employee.EmployeeID }, new { @class = "red" })
                                            </td>
                                        }
                                        else
                                        {
                                            {
                                            }
                                        }

                                    </tr>
                                }
                            </table>*@
                </div>
            }
            else
            {
                <h2>@Model.Employee.FirstName is not team player</h2>
            }

        </div><!--TEAMS-->
        <!--KIDS-->
        <div class="table-container personal">
            <h3>CHILDREN</h3>

            <div class="personal-subcontainer">

                <table class="children-table">
                    <tr>
                        <th class="children-name">NAME<i class="fa fa-caret-down"></i></th>
                        <th class="children-birthday">BIRTH DATE<i class="fa fa-caret-down upper-caret"></i><i class="fa fa-caret-up bottom-caret"></i></th>
                        <th class="children-birthday">GENDER<i class="fa fa-caret-down upper-caret"></i><i class="fa fa-caret-up bottom-caret"></i></th>

                        <th>NUMBER OF CHILDREN</th>
                    </tr>
                    @{

                        for (var i = 0; i < Model.Kids.Kids.Count; i++)
                        {

                            List<SelectListItem> genders = new List<SelectListItem>();
                            foreach (var a in Enum.GetValues(typeof(Data2.Enums.gender)))
                            {
                                SelectListItem pom = new SelectListItem { Text = a.ToString(), Value = (Convert.ToBoolean((int)a).ToString()) };
                                if ((int)a == Convert.ToInt32(@Model.Kids.Kids[i].Gender))
                                {
                                    pom.Selected = true;
                                }
                                genders.Add(pom);
                            }


                            @Html.HiddenFor(m => Model.Kids.Kids[i].kidID)
                            <tr>
                                <td class="children-name"> @Html.EditorFor(m => Model.Kids.Kids[i].FirstName, Model.Kids.Kids[i].FirstName) </td>
                                <td class="children-birthday">@Html.EditorFor(m => Model.Kids.Kids[i].DateOfBirth, Model.Kids.Kids[i].DateOfBirth)</td>
                                <td class="children-gender">@Html.DropDownListFor(model => model.Kids.Kids[i].Gender, genders, new { style = " margin: 0 0 0 30px; border:none" })</td>
                                @if (i == 0)
                                {
                                    String kidsNum = @Model.Kids.Kids.Count.ToString();
                                    <td class="children-number" rowspan=@kidsNum>@kidsNum</td>
                                }

                            </tr>
                        }
                    }

                    <tr>
                        <td class="children-name">
                            <input type="text" name="kidName" id="kidName" placeholder="Enter kid's name'" />
                        </td>
                        <td class="children-birthday">
                            <input type="text" name="kidBirthday" id="kidBirthday" class="datePicker" placeholder="Enter kid's birthday'" />
                        </td>
                        <td class="children-gender">
                            @*<input type="checkbox" name="kidGender" id="kidGender" value="">*@
                            <select id="kidGender" class="gender">
                                <option value=false>Female</option>
                                <option value=true>Male</option>
                            </select>
                        </td>

                        <td>
                            @Html.ActionLink("Add kid", "AddKid", new { id = Model.Employee.EmployeeID, name = "nameR", dateOfBirth = "dateR", gender = "genderR" }, new { @class = "linkAddKid", @style = "margin: 0 0 0 10px;    width: 0px; color:#2ecc71" })
                        </td>
                    </tr>

                </table>
            </div>
            <input type="submit" class="btn-link" value="Submit Changes" formaction='@Url.Action("editKids", "Employees")' />

        </div><!--KIDS-->


    </div>



</div>
    <!--end main-content-->
                        }

<div id="dialogAddEmployeeToTeam" class="dialogContainer" title="ADD EMPLOYEE">
    @using (Html.BeginForm("AddEmployeeToTeam", "Teams", FormMethod.Post))
    {
        Html.RenderPartial("~/Views/Teams/AddEmployeeToTeam.cshtml", new MVC.Models.EmpToTeamModel());
    }
</div>


<div class="dialog dialogContainer" title="CHANGE PASSWORD">
    @using (Html.BeginForm("ChangePassword", "Login", FormMethod.Post))
    {
        Html.RenderPartial("~/Views/Login/ChangePassword.cshtml", Create.ChangePassDTO(Model.Employee.EmployeeID));
    }
</div>

<script>
    $(function () {
        $('.linkAddKid').click(function () {


            var name = $("#kidName").val();
            var date = $("#kidBirthday").val();
            var gender = $('#kidGender').val();

            this.href = this.href.replace("nameR", name);
            this.href = this.href.replace("dateR", date);
            this.href = this.href.replace("genderR", gender);


        });
    });
</script>

<script>
    $(function () {
        $('.linkTel').click(function () {

            var number = $("#phoneNumber").val();
            this.href = this.href.replace("xxx", number);
        });
    });
</script>



<script>
    $(function () {
        $('.linkEmail').click(function () {

            var number = $("#email").val();
            this.href = this.href.replace("xxx", number);
        });
    });
</script>

<script>
    $(function () {
        $('.linkAdress').click(function () {

            var number = $("#adress").val();
            this.href = this.href.replace("xxx", number);
        });
    });
</script>


<script>
    $(function () {
        $('.showTelLink').click(function () {

            $('.showTel').show();
            this.href = '#';
        });
    });
</script>

<script>
    $(function () {
        $('.showEmailLink').click(function () {

            $('.showEmail').show();
            this.href = '#';
        });
    });
</script>


<script>
    $(function () {
        $('.showAdressLink').click(function () {

            $('.showAdress').show();
            this.href = '#';
        });
    });
</script>




