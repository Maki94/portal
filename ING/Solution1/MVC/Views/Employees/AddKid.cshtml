@model Data2.DTOs.KidDTO

@{
    ViewBag.Title = "AddKid";
}

<h2>AddKid to @ViewBag.parent</h2>

@{
    List<SelectListItem> genders = new List<SelectListItem>();
    foreach (var a in Enum.GetValues(typeof(Data2.Enums.gender)))
    {
        SelectListItem pom = new SelectListItem {Text = a.ToString(), Value = (Convert.ToBoolean((int) a).ToString())};
        if ((int) a == Convert.ToInt32(@Model.Gender))
        {
            pom.Selected = true;
        }
        genders.Add(pom);
    }
}

@{
    List<SelectListItem> employees = new List<SelectListItem>();
    List<int> selectedEmployees = new List<int>();
    foreach (var a in Data2.Employees.getAllEmployees())
    {
        SelectListItem pom = new SelectListItem { Text = a.firstName + " " + a.lastName, Value = a.employeeID.ToString() };
        if (a.employeeID == ViewBag.id)
        {
            selectedEmployees.Add(a.employeeID);
        }

        employees.Add(pom);
    }

}
    

@using (Html.BeginForm())
{
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>KidDTO</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="dropdown">
                    @Html.DropDownListFor(model => model.Gender, genders, "Select gender")
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Parents, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="dropdown">
                    @{String s = ViewBag.parent; }
                    @Html.ListBoxFor(m => m.Parents,
                                    new MultiSelectList(employees, "Value", "Text", selectedValues: selectedEmployees),
                                    new { Multiple = "multiple" , @class = "applications-multiselect" })
                    @Html.ValidationMessageFor(model => model.Parents, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>      

       


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>


       
    </div>
}

