@model Data2.DTOs.EmployeeDTO

@{
    ViewBag.Title = "AddEmployee";
    Layout = null;
}


@{
    List<SelectListItem> roles = new List<SelectListItem>();
    foreach (var a in Enum.GetValues(typeof(Data2.Enums.Roles)))
    {
        roles.Add(new SelectListItem { Text = a.ToString(), Value = ((int)a).ToString() });
    }
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
   
    <div class="form-horizontal form-group filter-container">

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName)
            @Html.EditorFor(model => model.FirstName)
            <label></label>
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName)
            @Html.EditorFor(model => model.LastName)
            <label></label>
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>


        <div class="form-group">
            @Html.Label("Role")
            @Html.DropDownListFor(m => m.Role, roles, "Select role")
            <label></label>
            @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Username)
            @Html.EditorFor(model => model.Username)
            <label></label>
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password)
            @Html.EditorFor(model => model.Password , new { htmlAttributes = new {@class = "password"}})
            <label></label>
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth)
            @Html.EditorFor(model => model.DateOfBirth, new {htmlAttributes = new {@class = " datePicker"}})
            <label></label>
            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new {@class = "text-danger"})
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContractStart)
            @Html.EditorFor(model => model.ContractStart, new { htmlAttributes = new { @class = " datePicker" } })
            <label></label>
            @Html.ValidationMessageFor(model => model.ContractStart, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContractEnd)
            @Html.EditorFor(model => model.ContractEnd, new { htmlAttributes = new { @class = " datePicker" } })
            <label></label>
            @Html.ValidationMessageFor(model => model.ContractEnd, "", new { @class = "text-danger" })
        </div>



        <input class="teamsSubmit bottom-button  diagram-submit" id ="addEmployee-btn"type="submit" name="submit" value="Add" />
        <a href="" class="bottom-button cancel-button">Cancel</a>


    </div>
}


