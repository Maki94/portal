@using Data2.DTOs
@model MVC.Models.HolidaysPageModel

@{
    ViewBag.Title = "Index";
}

@{
    Boolean manager = CheckPermission.CheckUserPermisson((int)Data2.Enums.Permissions.Holiday_Add_Remove);
}

@{
    List<SelectListItem> years = new List<SelectListItem>();
    foreach (int a in Data2.Holidays.getAllHolidayYears())
    {
        years.Add(new SelectListItem { Text = a.ToString(), Value = a.ToString() });
    }
}

@{
    List<SelectListItem> same = new List<SelectListItem>();
    same.Add(new SelectListItem { Text = "Same", Value = true.ToString() });
    same.Add(new SelectListItem { Text = "Not same", Value = false.ToString() });
}


@using (Html.BeginForm("Index", "Holidays", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="form-inline filter-container">

        <div class="form-group">
            <h4>Statuses</h4>
            @Html.DropDownListFor(m => m.YearFilter, years, "All Years")
            @Html.ValidationMessageFor(model => model.YearFilter)
        </div>
        <div class="form-group">
            <h4>Teams</h4>
            @Html.DropDownListFor(m => m.SameFilter, same, "All Holidays")
            @Html.ValidationMessageFor(model => model.SameFilter)
        </div>

        <div class="form-group">
            <input type="submit" value="Search" class="btn btn-default" />
        </div>

        @if (manager)
        {
            <input type="button" value="Add Holiday" id="add-holiday-btn" class="green-btn" />
        }
    </div>


    if (Model.List.Count > 0)
    {
        <div class="main-content">
            <div class="table-container" style="width: 800px;">

                <table class="table" style="width: auto;">
                    <tr>
                        <th>
                            <input type="submit" class="btn-link" value=@Html.DisplayNameFor(m=>m.List[0].Name).ToString() formaction='@Url.Action("Sort", "Holidays", new {sort = "Name"})' />
                        </th>

                        @Html.HiddenFor(model => model.List[0].HolidayID)

                        <th>
                            <input type="submit" class="btn-link" value=@Html.DisplayNameFor(m=>m.List[0].StartDate) formaction='@Url.Action("Sort", "Holidays", new {sort = "StartDate"})' />
                        </th>

                        <th>
                            <input type="submit" class="btn-link" value=@Html.DisplayNameFor(m=>m.List[0].EndDate) formaction='@Url.Action("Sort", "Holidays", new {sort = "EndDate"})' />
                        </th>
                        <th class="table-narrow">
                            <input type="submit" class="btn-link" value=@Html.DisplayNameFor(m=>m.List[0].Same) formaction='@Url.Action("Sort", "Holidays", new {sort = "Same"})' />
                        </th>
                        <th colspan="2"></th>

                    </tr>

                    @foreach (var item in Model.List)
                    {
                        Boolean oneDay = item.StartDate == item.EndDate;
                        <tr>
                            <td class="nameInfo table-name">
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            @Html.HiddenFor(modelItem => item.HolidayID, new { @class = "hiddenID" })

                            @if (oneDay)
                        {
                                <td class="table-date startDateInfo endDateInfo" colspan="2" style="text-align: center;">
                                    @Html.DisplayFor(modelItem => item.StartDate)
                                </td>
                            }
                            else
                            {
                                <td class="table-date startDateInfo">
                                    @Html.DisplayFor(modelItem => item.StartDate)
                                </td>
                                <td class="table-date endDateInfo">
                                    @Html.DisplayFor(modelItem => item.EndDate)
                                </td>
                            }

                            <td class="sameInfo" style="padding-left: 30px;">
                                @Html.DisplayFor(modelItem => item.Same)
                            </td>
                            <td class="table-narrow">
                                @if (manager && item.StartDate.Year == DateTime.Today.Year && item.StartDate >= DateTime.Today)
                                {
                                    @Html.ActionLink("Remove", "Remove", "Holidays", new { id = item.HolidayID }, new { @class = "red-link" })
                                }

                            </td>
                            <td class="table-narrow">
                                @if (manager && item.StartDate.Year == DateTime.Today.Year && item.StartDate >= DateTime.Today)
                                {
                                    <input type="button" value="Edit" class="green-link edit-holiday-btn" />
                                }

                            </td>
                        </tr>
                    }

                </table>
            </div>
        </div>
    }
    else
    {

    }
}

<div class="dialog dialogContainer" id="dialogEdit" title="CREATE HOLIDAY">
    @using (Html.BeginForm("Create", "Holidays", FormMethod.Post))
    {
        Html.RenderPartial("Create", new HolidayDTO());
    }
</div>

